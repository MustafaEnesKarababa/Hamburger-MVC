@using IdentitySonProje.Entities;
@using Microsoft.AspNetCore.Identity
@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <a  class="nav-link text-dark" href="" title="Manage">Welcome @User.Identity?.Name.Split('@')[0]</a>
    </li>
        @if (await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), "Admin"))
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="" asp-controller="Hamburger" asp-action="ShoppingCart"><i class="fa-solid fa-cart-shopping fa-lg"></i></a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="Admin" asp-controller="Panel" asp-action="Index">Go to Admin Panel</a>
            </li>
        }
        else
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="" asp-controller="Hamburger" asp-action="ShoppingCart"><i class="fa-solid fa-cart-shopping fa-lg"></i></a>
            </li>
        }
        <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Hamburger", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-controller="Hamburger" asp-action="ShoppingCart"><i class="fa-solid fa-cart-shopping fa-lg"></i></a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
